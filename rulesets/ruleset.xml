<?xml version="1.0"?>
<ruleset name="Custom ruleset"
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
   rules
  </description>
  <rule ref="category/java/design.xml/CyclomaticComplexity">
    <properties>
      <property name="methodReportLevel" value="3"/>
    </properties>
  </rule>
  <rule ref="category/java/design.xml/CognitiveComplexity">
    <properties>
        <property name="reportLevel" value="3" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/ExcessiveParameterList">
    <properties>
        <property name="minimum" value="4" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
  <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
    <properties>
        <property name="problemDepth" value="2" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/CouplingBetweenObjects">
    <properties>
        <property name="threshold" value="5" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/ExcessiveImports">
    <properties>
        <property name="minimum" value="15" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/ExcessivePublicCount">
    <properties>
        <property name="minimum" value="5" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/LawOfDemeter">
    <properties>
        <property name="trustRadius" value="1" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/LoosePackageCoupling">
    <properties>
        <property name="packages" value="game" />
        <property name="classes" value="" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/NcssCount">
    <properties>
        <property name="methodReportLevel" value="6" />
        <property name="classReportLevel" value="1500" />
        <property name="ncssOptions" value="" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/NPathComplexity">
    <properties>
        <property name="reportLevel" value="5" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SwitchDensity">
    <properties>
        <property name="minimum" value="3" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyFields">
    <properties>
        <property name="maxfields" value="5" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/TooManyMethods">
    <properties>
        <property name="maxmethods" value="10" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UselessOverridingMethod">
    <properties>
        <property name="ignoreAnnotations" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/AvoidRethrowingException" />
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
  <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures" />
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
  <rule ref="category/java/design.xml/CollapsibleIfStatements" />
  <rule ref="category/java/design.xml/DataClass" />
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
  <rule ref="category/java/design.xml/ExceptionAsFlowControl" />
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
  <rule ref="category/java/design.xml/GodClass" />
  <rule ref="category/java/design.xml/ImmutableField" />
  <rule ref="category/java/design.xml/InvalidJavaBean" />
  <rule ref="category/java/design.xml/LogicInversion" />
  <rule ref="category/java/design.xml/MutableStaticState" />
  <rule ref="category/java/design.xml/SignatureDeclareThrowsException" />
  <rule ref="category/java/design.xml/SimplifiedTernary" />
  <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
  <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
  <rule ref="category/java/design.xml/SimplifyConditional" />
  <rule ref="category/java/design.xml/SingularField" />
  <rule ref="category/java/design.xml/UseUtilityClass" />
  
  <!-- Code Style -->
  
  <rule ref="category/java/codestyle.xml/AtLeastOneConstructor" />
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
  <rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
  <rule ref="category/java/codestyle.xml/BooleanGetMethodName">
    <properties>
        <property name="checkParameterizedMethods" value="yes" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <properties>
        <property name="classPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="interfacePattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="enumPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="annotationPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="testClassPattern" value="^Test.*$|^[A-Z][a-zA-Z0-9]*Test(s|Case)?$" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ConfusingTernary">
    <properties>
        <property name="ignoreElseIf" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ControlStatementBraces">
    <properties>
        <property name="checkIfElseStmt" value="false" />
        <property name="checkSingleIfStmt" value="true" />
        <property name="checkWhileStmt" value="true" />
        <property name="checkForStmt" value="true" />
        <property name="checkDoWhileStmt" value="true" />
        <property name="checkCaseStmt" value="false" />
        <property name="allowEmptyLoop" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/EmptyControlStatement">
    <properties>
        <property name="allowCommentedBlocks" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass">
    <properties>
        <property name="ignoreAnonymousClassDeclarations" value="true" />
        <property name="ignoreInterfaceDeclarations" value="false" />
        <property name="ignoreEnumDeclarations" value="true" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions">
    <properties>
        <property name="publicConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="constantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="enumConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="finalFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="staticFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="defaultFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="exclusions" value="serialVersionUID,serialPersistentFields" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions">
    <properties>
        <property name="methodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="finalMethodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="lambdaParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="explicitLambdaParameterPattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LinguisticNaming">
    <properties>
        <property name="ignoredAnnotations" value="java.lang.Override" />
        <property name="checkBooleanMethod" value="true" />
        <property name="checkGetters" value="true" />
        <property name="checkSetters" value="true" />
        <property name="checkPrefixedTransformMethods" value="true" />
        <property name="checkTransformMethods" value="false" />
        <property name="booleanMethodPrefixes" value="is,has,can,have,will,should" />
        <property name="transformMethodNames" value="to,as" />
        <property name="checkFields" value="true" />
        <property name="checkVariables" value="true" />
        <property name="booleanFieldPrefixes" value="is,has,can,have,will,should" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal">
    <properties>
        <property name="ignoreForEachDecl" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions">
    <properties>
        <property name="localVarPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="finalVarPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="catchParameterPattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
        <property name="minimum" value="17" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions">
    <properties>
        <property name="methodPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="nativePattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="junit3TestPattern" value="test[A-Z0-9][a-zA-Z0-9]*" />
        <property name="junit4TestPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="junit5TestPattern" value="[a-z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortClassName">
    <properties>
        <property name="minimum" value="5" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortMethodName">
    <properties>
        <property name="minimum" value="3" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortVariable">
    <properties>
        <property name="minimum" value="3" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/TooManyStaticImports">
    <properties>
        <property name="maximumStaticImports" value="4" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement">
    <properties>
        <property name="java7Compatibility" value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName">
    <properties>
        <property name="reportStaticMethods" value="true" />
        <property name="reportStaticFields" value="true" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UseExplicitTypes">
    <properties>
        <property name="allowLiterals" value="false" />
        <property name="allowCtors" value="false" />
    </properties>
  </rule> 
  <rule ref="category/java/codestyle.xml/UselessParentheses">
    <properties>
        <property name="ignoreClarifying" value="true" />
        <property name="ignoreBalancing" value="true" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals">
    <properties>
        <property name="acceptableDecimalLength" value="4" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier" />
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
  <rule ref="category/java/codestyle.xml/ExtendsObject" />
  <rule ref="category/java/codestyle.xml/FinalParameterInAbstractMethod" />
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
  <rule ref="category/java/codestyle.xml/GenericsNaming" />
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches" />
  <rule ref="category/java/codestyle.xml/LocalHomeNamingConvention" />
  <rule ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention" />
  <rule ref="category/java/codestyle.xml/MDBAndSessionBeanNamingConvention" />
  <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" />
  <rule ref="category/java/codestyle.xml/NoPackage" />
  <rule ref="category/java/codestyle.xml/OnlyOneReturn" />
  <rule ref="category/java/codestyle.xml/PackageCase" />
  <rule ref="category/java/codestyle.xml/PrematureDeclaration" />
  <rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention" />
  <rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention" />
  <rule ref="category/java/codestyle.xml/UnnecessaryBoxing" />
  <rule ref="category/java/codestyle.xml/UnnecessaryCast" />
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />
  <rule ref="category/java/codestyle.xml/UnnecessaryImport" />
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier" />
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
  <rule ref="category/java/codestyle.xml/UnnecessarySemicolon" />
  <rule ref="category/java/codestyle.xml/UseDiamondOperator" />
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis" />
  <rule ref="category/java/codestyle.xml/UseShortArrayInitializer" />
  
  

</ruleset>
